/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.City;
import model.Community;
import model.House;
import model.Patient;
import model.PatientDirectory;
import model.SystemAdmin;

/**
 *
 * @author shubham
 */
public class ViewPatientPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewPatientPanel
     */
    SystemAdmin sysAdmin;
    public ViewPatientPanel(SystemAdmin sysAdmin) {
        initComponents();
        this.sysAdmin = sysAdmin;
        populateHouses();
        populateTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatientDirectory = new javax.swing.JTable();
        btnviewPatientDetails = new javax.swing.JButton();
        btnupdatePatientDetails = new javax.swing.JButton();
        lblPatientPhoneNumber = new javax.swing.JLabel();
        lblPatientEmailAddress = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        txtPatientAge = new javax.swing.JTextField();
        txtPatientGender = new javax.swing.JTextField();
        txtPatientPhoneNumber = new javax.swing.JTextField();
        txtPatientEmailAddress = new javax.swing.JTextField();
        lblPatientFundamentals = new javax.swing.JLabel();
        lblPatientHeight = new javax.swing.JLabel();
        lblPatientWeight = new javax.swing.JLabel();
        lblPatientName = new javax.swing.JLabel();
        lblPatientAllergies = new javax.swing.JLabel();
        lblPatientAge = new javax.swing.JLabel();
        txtPatientHeight = new javax.swing.JTextField();
        lblPatientGender = new javax.swing.JLabel();
        txtPatientWeight = new javax.swing.JTextField();
        txtPatientAllergies = new javax.swing.JTextField();
        lblContactDetails = new javax.swing.JLabel();
        lblPatientUsername = new javax.swing.JLabel();
        txtPatientUsername = new javax.swing.JTextField();
        lblPatientPassword = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxPatientHouse = new javax.swing.JComboBox<>();
        btnSavePatient = new javax.swing.JButton();
        txtPatientPassword = new javax.swing.JPasswordField();

        setBackground(new java.awt.Color(43, 145, 191));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("View Patients");

        tblPatientDirectory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Name", "Age", "House", "HeightinCms", "WeightinCms", "Allergies"
            }
        ));
        jScrollPane1.setViewportView(tblPatientDirectory);

        btnviewPatientDetails.setForeground(new java.awt.Color(43, 145, 191));
        btnviewPatientDetails.setText("View Details");
        btnviewPatientDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnviewPatientDetailsActionPerformed(evt);
            }
        });

        btnupdatePatientDetails.setForeground(new java.awt.Color(43, 145, 191));
        btnupdatePatientDetails.setText("Update Details");
        btnupdatePatientDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdatePatientDetailsActionPerformed(evt);
            }
        });

        lblPatientPhoneNumber.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPatientPhoneNumber.setForeground(new java.awt.Color(255, 255, 255));
        lblPatientPhoneNumber.setText("Phone Number");

        lblPatientEmailAddress.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPatientEmailAddress.setForeground(new java.awt.Color(255, 255, 255));
        lblPatientEmailAddress.setText("Email Address");

        txtPatientName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientNameActionPerformed(evt);
            }
        });

        txtPatientPhoneNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientPhoneNumberActionPerformed(evt);
            }
        });

        lblPatientFundamentals.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblPatientFundamentals.setForeground(new java.awt.Color(255, 255, 255));
        lblPatientFundamentals.setText("Fundamentals");

        lblPatientHeight.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPatientHeight.setForeground(new java.awt.Color(255, 255, 255));
        lblPatientHeight.setText("Height");

        lblPatientWeight.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPatientWeight.setForeground(new java.awt.Color(255, 255, 255));
        lblPatientWeight.setText("Weight");

        lblPatientName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPatientName.setForeground(new java.awt.Color(255, 255, 255));
        lblPatientName.setText("Name");

        lblPatientAllergies.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPatientAllergies.setForeground(new java.awt.Color(255, 255, 255));
        lblPatientAllergies.setText("Allergies");

        lblPatientAge.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPatientAge.setForeground(new java.awt.Color(255, 255, 255));
        lblPatientAge.setText("Age");

        txtPatientHeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientHeightActionPerformed(evt);
            }
        });

        lblPatientGender.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPatientGender.setForeground(new java.awt.Color(255, 255, 255));
        lblPatientGender.setText("Gender");

        lblContactDetails.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblContactDetails.setForeground(new java.awt.Color(255, 255, 255));
        lblContactDetails.setText("Contact Details");

        lblPatientUsername.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPatientUsername.setForeground(new java.awt.Color(255, 255, 255));
        lblPatientUsername.setText("Username");

        lblPatientPassword.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPatientPassword.setForeground(new java.awt.Color(255, 255, 255));
        lblPatientPassword.setText("Password");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("House");

        btnSavePatient.setForeground(new java.awt.Color(43, 145, 191));
        btnSavePatient.setText("Save Patient");
        btnSavePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSavePatientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblPatientUsername)
                        .addComponent(lblPatientPassword, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(lblPatientGender)
                    .addComponent(jLabel2)
                    .addComponent(lblPatientAge)
                    .addComponent(lblPatientName))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxPatientHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientGender, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPatientName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(82, 82, 82)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPatientAllergies)
                            .addComponent(lblPatientWeight)
                            .addComponent(lblPatientHeight))
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtPatientHeight, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPatientWeight, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPatientAllergies, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPatientEmailAddress)
                            .addComponent(lblPatientPhoneNumber))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPatientFundamentals)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtPatientEmailAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                                .addComponent(txtPatientPhoneNumber)))))
                .addGap(0, 77, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnviewPatientDetails)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnupdatePatientDetails))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 836, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(352, 352, 352))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblContactDetails)
                        .addGap(217, 217, 217))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnSavePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(381, 381, 381))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnviewPatientDetails)
                    .addComponent(btnupdatePatientDetails))
                .addGap(56, 56, 56)
                .addComponent(lblContactDetails)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPatientPhoneNumber)
                            .addComponent(txtPatientPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPatientEmailAddress)
                            .addComponent(txtPatientEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lblPatientFundamentals)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPatientHeight)
                                .addGap(41, 41, 41))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(lblPatientWeight)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblPatientAllergies))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtPatientHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17)
                                .addComponent(txtPatientWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPatientAllergies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPatientName)
                            .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(lblPatientAge))
                            .addComponent(txtPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jComboBoxPatientHouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPatientGender)
                            .addComponent(txtPatientGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblPatientPassword)
                                .addComponent(txtPatientPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPatientUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPatientUsername))
                                .addGap(41, 41, 41)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                .addComponent(btnSavePatient)
                .addGap(84, 84, 84))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtPatientPhoneNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientPhoneNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientPhoneNumberActionPerformed

    private void txtPatientHeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientHeightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientHeightActionPerformed

    private void btnviewPatientDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnviewPatientDetailsActionPerformed
        // TODO add your handling code here:
        int selectedrowIndex = tblPatientDirectory.getSelectedRow();
        if(selectedrowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select row to view the details");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblPatientDirectory.getModel();
        Patient p = (Patient) model.getValueAt(selectedrowIndex, 1);
        
        
        
        txtPatientName.setText(p.getName());
        txtPatientName.setEditable(false);
        txtPatientAge.setText(String.valueOf(p.getAge()));
        txtPatientAge.setEditable(false);
        txtPatientGender.setText(String.valueOf(p.getGender()));
        txtPatientGender.setEditable(false);
        jComboBoxPatientHouse.setSelectedItem(p.getAddress());
        jComboBoxPatientHouse.setEditable(false);
        
        txtPatientPhoneNumber.setText(p.getPhoneNumber());
        txtPatientPhoneNumber.setEditable(false);
        txtPatientEmailAddress.setText(p.getEmailAddress());
        txtPatientEmailAddress.setEditable(false);
        txtPatientUsername.setText(p.getUsername());
        txtPatientUsername.setEditable(false);
        txtPatientPassword.setText(p.getPassword());
        txtPatientPassword.setEditable(false);
        
        txtPatientHeight.setText(String.valueOf(p.getHeightIncms()));
        txtPatientHeight.setEditable(false);
        txtPatientWeight.setText(String.valueOf(p.getWeightInKgs()));
        txtPatientWeight.setEditable(false);
        txtPatientAllergies.setText(p.getAllergies());
        txtPatientAllergies.setEditable(false);
        
        
        
    }//GEN-LAST:event_btnviewPatientDetailsActionPerformed

    private void btnupdatePatientDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdatePatientDetailsActionPerformed
        // TODO add your handling code here:
        int selectedrowIndex = tblPatientDirectory.getSelectedRow();
        if(selectedrowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select row to view the details");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblPatientDirectory.getModel();
        Patient p = (Patient) model.getValueAt(selectedrowIndex, 1);
        
        
        
        txtPatientName.setText(p.getName());
        txtPatientName.setEditable(true);
        txtPatientAge.setText(String.valueOf(p.getAge()));
        txtPatientAge.setEditable(true);
        txtPatientGender.setText(String.valueOf(p.getGender()));
        txtPatientGender.setEditable(true);
        jComboBoxPatientHouse.setSelectedItem(p.getAddress());
        jComboBoxPatientHouse.setEditable(true);
        
        txtPatientPhoneNumber.setText(p.getPhoneNumber());
        txtPatientPhoneNumber.setEditable(true);
        txtPatientEmailAddress.setText(p.getEmailAddress());
        txtPatientEmailAddress.setEditable(true);
        txtPatientUsername.setText(p.getUsername());
        txtPatientUsername.setEditable(true);
        txtPatientPassword.setText(p.getPassword());
        txtPatientPassword.setEditable(true);
        
        txtPatientHeight.setText(String.valueOf(p.getHeightIncms()));
        txtPatientHeight.setEditable(true);
        txtPatientWeight.setText(String.valueOf(p.getWeightInKgs()));
        txtPatientWeight.setEditable(true);
        txtPatientAllergies.setText(p.getAllergies());
        txtPatientAllergies.setEditable(true);
    }//GEN-LAST:event_btnupdatePatientDetailsActionPerformed

    private void btnSavePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSavePatientActionPerformed
        // TODO add your handling code here:
        
        if(jComboBoxPatientHouse.getSelectedItem()==null){
            JOptionPane.showMessageDialog(this, "Select Hospital");
            return;
        }
        House house = (House)jComboBoxPatientHouse.getSelectedItem();
        
        Patient p = sysAdmin.getPatientDirectory().getPatient(txtPatientUsername.getText());
        
        String patientName = txtPatientName.getText();
        int patientAge;
        String patientGender = txtPatientGender.getText();
        

        
        String patientEmail = txtPatientEmailAddress.getText();
        String patientPhone = txtPatientPhoneNumber.getText();
        String username = txtPatientUsername.getText();
        String password = txtPatientPassword.getText();
        String weight = txtPatientWeight.getText();
        String height = txtPatientHeight.getText();
        String allergies = txtPatientAllergies.getText();

        if(patientName.length()==0 || patientGender.length()==0 || patientEmail.length()==0 ||
            patientPhone.length()==0 || username.length()==0 || password.length()==0){
            JOptionPane.showMessageDialog(this, "Enter All Fields");
            return;
        }
        try{
            patientAge = Integer.parseInt(txtPatientAge.getText());
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Enter Valid Age");
            return;
        }

        

        String emailRegex = "^(.+)@(.+)$";
        Pattern emailPattern = Pattern.compile(emailRegex);
        Matcher emailmatcher = emailPattern.matcher(patientEmail);
        if(emailmatcher.matches()==false){
            JOptionPane.showMessageDialog(this, "Enter Valid Email");
            return;
        }
        if(patientPhone.length()!=10){
            JOptionPane.showMessageDialog(this, "Enter Valid Phone Number");
            return;
        }

        
        p.setName(patientName);
        p.setAge(patientAge);
        
        p.setGender(patientGender);
        
        
        p.setEmailAddress(patientEmail);
        p.setPhoneNumber(patientPhone);
        p.setUsername(username);
        p.setPassword(password);
        p.setAddress(house);
        p.setHeightIncms(Double.parseDouble(height));
        p.setWeightInKgs(Double.parseDouble(weight));
        p.setAllergies(allergies);

        JOptionPane.showMessageDialog(this, "Patient Info Updated");

        txtPatientAge.setText("");
        txtPatientEmailAddress.setText("");
        
        txtPatientGender.setText("");
        txtPatientName.setText("");
        
        txtPatientPassword.setText("");
        txtPatientPhoneNumber.setText("");
        txtPatientWeight.setText("");
        txtPatientHeight.setText("");
        txtPatientAllergies.setText("");
        txtPatientUsername.setText("");
        jComboBoxPatientHouse.setSelectedItem(null);
        populateTable();
        
    }//GEN-LAST:event_btnSavePatientActionPerformed

    private void txtPatientNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientNameActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSavePatient;
    private javax.swing.JButton btnupdatePatientDetails;
    private javax.swing.JButton btnviewPatientDetails;
    private javax.swing.JComboBox<Object> jComboBoxPatientHouse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblContactDetails;
    private javax.swing.JLabel lblPatientAge;
    private javax.swing.JLabel lblPatientAllergies;
    private javax.swing.JLabel lblPatientEmailAddress;
    private javax.swing.JLabel lblPatientFundamentals;
    private javax.swing.JLabel lblPatientGender;
    private javax.swing.JLabel lblPatientHeight;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JLabel lblPatientPassword;
    private javax.swing.JLabel lblPatientPhoneNumber;
    private javax.swing.JLabel lblPatientUsername;
    private javax.swing.JLabel lblPatientWeight;
    private javax.swing.JTable tblPatientDirectory;
    private javax.swing.JTextField txtPatientAge;
    private javax.swing.JTextField txtPatientAllergies;
    private javax.swing.JTextField txtPatientEmailAddress;
    private javax.swing.JTextField txtPatientGender;
    private javax.swing.JTextField txtPatientHeight;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JPasswordField txtPatientPassword;
    private javax.swing.JTextField txtPatientPhoneNumber;
    private javax.swing.JTextField txtPatientUsername;
    private javax.swing.JTextField txtPatientWeight;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        
        
        DefaultTableModel model = (DefaultTableModel)tblPatientDirectory.getModel();
        model.setRowCount(0);
        PatientDirectory pd = sysAdmin.getPatientDirectory();
        List<Patient> patients = pd.getPatientDirectory();
        for(Patient p : patients){
            Object[] row = new Object[7];
            row[0] = p.getPatientId();
            row[1] = p;
            row[2] = p.getAge();
            row[3] = p.getAddress();
            row[4] = p.getHeightIncms();
            row[5] = p.getWeightInKgs();
            row[6] = p.getAllergies();
            model.addRow(row);
        }
        
        
        
    }

    private void populateHouses() {
        List<City> cities = sysAdmin.getCities();
        jComboBoxPatientHouse.removeAllItems();
        for(City c : cities){
            for(Community community : c.getCommunityList()){
                for(House h : community.getHouseList()){
                    jComboBoxPatientHouse.addItem(h);
                }
            }
        }
    }
}
